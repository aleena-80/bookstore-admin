<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ocean Books - Orders</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Roboto', sans-serif; background: #F5F5F5; color: #1C2526; padding-top: 100px; }
        .navbar { background: #FFFFFF; padding: 15px 20px; display: flex; justify-content: space-between; align-items: center; position: fixed; top: 0; left: 0; width: 100%; z-index: 1000; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); }
        .logo h1 a { color: #58CC02; text-decoration: none; font-size: 28px; font-weight: 700; }
        .tagline { color: #1C2526; font-size: 14px; margin-top: 5px; }
        .nav-links { list-style: none; display: flex; gap: 20px; align-items: center; }
        .nav-links li a { color: #1C2526; text-decoration: none; font-size: 16px; font-weight: 700; }
        .nav-links li a:hover { color: #58CC02; }
        .breadcrumbs { padding: 20px; font-size: 14px; color: #1C2526; background-color: #E5E5E5;}
        .breadcrumbs a { color: #1C2526; text-decoration: none; transition: color 0.3s;}
        .breadcrumbs a:hover { color: #58CC02;}
        .breadcrumbs span { margin: 0 5px; }
        .order-list { max-width: 1200px; margin: 0 auto; padding: 20px; }
        h2 { color: #58CC02; margin-bottom: 20px; }
        .search-bar { margin-bottom: 20px; }
        .search-bar input { padding: 10px; width: 100%; max-width: 300px; border: 1px solid #ddd; border-radius: 5px; }
        .order-card { background: #FFFFFF; padding: 20px; border-radius: 12px; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05); margin-bottom: 20px; }
        .order-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px; flex-wrap: wrap; gap: 10px; }
        .order-header p { margin: 0; font-size: 16px; }
        .order-items { margin-bottom: 15px; }
        .order-item { display: flex; align-items: center; gap: 10px; }
        .order-item img { width: 50px; height: 50px; object-fit: cover; border-radius: 5px; }
        .actions { display: flex; gap: 10px; margin-top: 15px; }
        .btn { padding: 8px 16px; background: #58CC02; color: #FFFFFF; border: none; border-radius: 20px; cursor: pointer; font-weight: 700; text-decoration: none; }
        .btn:hover { background: #46a802; }
        .btn-cancel { background: #e74c3c; }
        .btn-return { background: #f39c12; }
        .message { position: fixed; top: 20px; right: 20px; padding: 10px 20px; background: #58CC02; color: #FFFFFF; border-radius: 5px; display: none; }
    </style>
</head>
<body>
    <header>
        <nav class="navbar">
            <div class="logo">
                <h1><a href="/users/landing">Ocean Books</a></h1>
                <p class="tagline">Dive into a Sea of Stories</p>
            </div>
            <ul class="nav-links">
                <li><a href="/users/wishlist"><i class="fas fa-heart"></i> (<%= wishlistCount || 0 %>)</a></li>
                <li><a href="/users/cart"><i class="fas fa-shopping-cart"></i> (<%= cartCount || 0 %>)</a></li>
                <li><a href="/users/profile"><i class="fas fa-user"></i></a></li>
                <% if (user) { %>
                    <li><a href="/users/logout"><i class="fas fa-sign-out-alt"></i></a></li>
                <% } %>
            </ul>
        </nav>
    </header>

    <section class="breadcrumbs">
        <a href="/users/landing">Home</a> <span>›</span> 
        <a href="/users/shop">Shop</a> <span>›</span> 
        <a href="/users/cart">Cart</a> <span>›</span> 
        <span>Orders</span>
    </section>

    <main>
        <div class="order-list">
            <h2>Your Orders</h2>
            <% if (orders.length === 0) { %>
                <p>No orders found.</p>
            <% } %>
            <% orders.forEach(order => { %>
                <div class="order-card">
                    <div class="order-header">
                        <p><strong>Order #<%= order.orderId %></strong></p>
                        <p>Date: <%= order.createdAt.toLocaleDateString() %></p>
                        <p>Status: <%= order.status %></p>
                        <p>Total: ₹<%= order.total.toFixed(2) %></p>
                    </div>
                    <div class="order-items">
                        <% order.items.forEach(item => { %>
                            <div class="order-item">
                                <img src="<%= item.productId.images && item.productId.images.length > 0 ? '/images/' + item.productId.images[0] : '/default-product.jpg' %>" alt="<%= item.productId.name %>">
                                <p><%= item.productId.name %> (Qty: <%= item.quantity %>)</p>
                            </div>
                        <% }); %>
                    </div>
                    <div class="actions">
                        <a href="/users/orders/view/<%= order._id %>" class="btn">View Details</a>
                        <% if (['Pending', 'Shipped'].includes(order.status)) { %>
                            <button class="btn btn-cancel" onclick="cancelOrder('<%= order._id %>')">Cancel Order</button>
                        <% } %>
                        <% if (order.status === 'Delivered' && !order.returnRequest) { %>
                            <button class="btn btn-return" onclick="requestReturn('<%= order._id %>')">Request Return</button>
                        <% } %>
                        <% if (order.returnRequest) { %>
                            <p>Return Requested</p>
                        <% } %>
                    </div>
                </div>
            <% }); %>
        </div>
    </main>

    <div class="message" id="message"></div>

    <script>
        const searchInput = document.getElementById('search');
        searchInput.addEventListener('keyup', function(event) {
            if (event.key === 'Enter') {
                const searchValue = this.value.trim();
                window.location.href = `/users/orders?search=${encodeURIComponent(searchValue)}`;
            }
        });

        function showMessage(text, isError = false) {
            const msg = document.getElementById('message');
            msg.textContent = text;
            msg.style.background = isError ? '#e74c3c' : '#58CC02';
            msg.style.display = 'block';
            setTimeout(() => msg.style.display = 'none', 3000);
        }

        async function cancelOrder(orderId) {
    const reason = prompt('Please provide a reason for cancellation:');
    if (!reason) return showMessage('Cancellation requires a reason', true);

    try {
        console.log('Cancelling order:', orderId, 'Reason:', reason); // Debug
        const res = await fetch(`/users/orders/cancel/${orderId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            credentials: 'include',
            body: JSON.stringify({ reason })
        });
        const data = await res.json();
        console.log('Cancel Response:', data); // Debug
        if (data.success) {
            showMessage('Order cancelled successfully');
            setTimeout(() => location.reload(), 1000);
        } else {
            showMessage(data.message || 'Failed to cancel order', true);
        }
    } catch (error) {
        console.error('Cancel Order Error:', error);
        showMessage('Error cancelling order', true);
    }
}

        async function requestReturn(orderId) {
            if (!confirm('Are you sure you want to request a return?')) return;
            try {
                const res = await fetch(`/users/orders/return/${orderId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    credentials: 'include'
                });
                const data = await res.json();
                if (data.success) {
                    showMessage('Return requested successfully');
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showMessage(data.message || 'Failed to request return', true);
                }
            } catch (error) {
                console.error('Request Return Error:', error);
                showMessage('Error requesting return', true);
            }
        }
    </script>
</body>
</html>