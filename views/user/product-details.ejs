<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ocean Books - <%= product.name %></title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background-color: #FFFFFF;
            color: #1C2526;
            line-height: 1.6;
            padding-top: 120px;
        }

        header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1000;
            background-color: #FFFFFF;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .navbar {
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo h1 a {
            color: #58CC02;
            text-decoration: none;
            font-size: 28px;
            font-weight: 700;
        }

        .tagline {
            color: #1C2526;
            font-size: 14px;
        }

        .wishlist-count, .cart-count {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #58CC02;
            color: #FFFFFF;
            font-size: 12px;
            font-weight: 700;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            line-height: 1;
        }
        .count-badge {
            position: absolute;
            top: -7px;
            right: -8px;
            background: #58CC02; /* Match brand color */
            color: #FFFFFF;
            font-size: 12px;
            font-weight: 700;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            line-height: 1;
        }
        .count-badge:empty {
            display: none; /* Hide if count is 0 */
        }
       
        .nav-links {
            list-style: none;
            display: flex;
            gap: 15px;
            align-items: center;
            flex-wrap: wrap;
            justify-content: flex-end;
            width: auto; /* Adjusted for better mobile fit */
        }

        .nav-links li a {
            color: #1C2526;
            text-decoration: none;
            font-size: 16px;
            font-weight: 700;
            display: flex;
            align-items: center;
            transition: color 0.3s;
            position: relative;
        }

        .nav-links li a:hover {
            color: #58CC02;
        }

        .nav-links li a i {
            margin-right: 5px;
        }

        .nav-links li.profile-link a {
            color: #1C2526;
        }
        .breadcrumbs { padding: 15px 12px; font-size: 14px; color: #1C2526; background: #E5E5E5; }
        .breadcrumbs a { color: #1C2526; text-decoration: none; }
        .breadcrumbs a:hover { color: #58CC02; }
        .breadcrumbs span { margin: 0 5px; }

        .product-details-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            max-width: 1100px;
            margin: 20px auto;
            padding: 20px;
            background: #FFFFFF;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .product-images {
            flex: 1;
            min-width: 300px;
            text-align: center;
            position: relative;
        }

        .main-image img {
            width: 100%;
            max-width: 300px;
            border-radius: 8px;
            transition: transform 0.3s ease;
        }

        .main-image img:hover {
            transform: scale(1.05);
        }

        .thumbnail-gallery {
            display: flex;
            justify-content: center;
            margin-top: 10px;
        }

        .thumbnail {
            margin: 5px;
            cursor: pointer;
        }

        .thumbnail img {
            width: 60px;
            height: 60px;
            border-radius: 6px;
            border: 2px solid #E5E5E5;
            transition: border 0.3s ease;
        }

        .thumbnail img:hover, .thumbnail img.active {
            border: 2px solid #58CC02;
        }

        .drift-zoom-pane {
            width: 200px !important;
            height: 200px !important;
            border-radius: 50%;
            border: 2px solid #58CC02;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }

        .product-info {
            flex: 1;
            padding: 20px;
        }

        .product-category {
            font-size: 18px;
            color: #1C2526;
            margin-bottom: 5px;
            font-weight: 700;
            text-transform: uppercase;
        }

        .product-name {
            font-size: 24px;
            font-weight: 700;
            color: #1C2526;
            margin-bottom: 10px;
        }

        .product-rating {
            display: flex;
            align-items: center;
            margin: 10px 0;
        }

        .product-rating p {
            font-size: 16px;
            color: #1C2526;
        }

        .product-description {
            margin: 15px 0;
        }

        .product-description h3 {
            font-size: 18px;
            color: #1C2526;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .product-description p {
            font-size: 14px;
            color: #1C2526;
        }

        .actual_price {
            font-size: 16px;
            color: #A0A0A0;
        }

        .actual_price .price {
            text-decoration: line-through;
        }

        .product-price {
            font-size: 20px;
            font-weight: 700;
            color: #58CC02;
            margin-top: 5px;
        }

        .product-price .discount {
            font-size: 16px;
            color: #FF4D4D;
            margin-left: 5px;
        }

        .quantity-selector {
            display: flex;
            align-items: center;
            margin: 15px 0;
        }

        .quantity-selector label {
            font-size: 16px;
            font-weight: 700;
            margin-right: 10px;
        }

        .quantity-btn {
            background: #58CC02;
            color: #FFFFFF;
            border: none;
            padding: 5px 12px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 80px;
            transition: background 0.3s;
        }

        .quantity-btn:hover {
            background: #4AB302;
        }

        .quantity-btn:disabled {
            background: #A0A0A0;
            cursor: not-allowed;
        }

        .quantity-input {
            width: 60px;
            text-align: center;
            border: 2px solid #E5E5E5;
            border-radius: 4px;
            padding: 5px;
            font-size: 16px;
            margin: 0 10px;
        }

        .stock-status .in-stock {
            color: #58CC02;
            margin-left: 15px;
            font-size: 14px;
        }

        .stock-status .out-of-stock {
            color: #FF4D4D;
            margin-left: 15px;
            font-size: 14px;
        }

        .action-buttons {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        .action-buttons button {
            padding: 12px 20px;
            font-size: 16px;
            font-weight: 700;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: background 0.3s ease;
            background: #58CC02;
            color: #FFFFFF;
        }

        .action-buttons button:hover {
            background: #4AB302;
        }

        .action-buttons button:disabled {
            background: #A0A0A0;
            cursor: not-allowed;
        }

        .container {
            max-width: 1100px;
            margin: 40px auto;
            padding: 0 20px;
        }

        .container h1 {
            font-size: 28px;
            color: #1C2526;
            font-weight: 700;
            text-align: center;
            margin-bottom: 20px;
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
        }

        .product-card {
            background: #FFFFFF;
            padding: 10px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            border: 1px solid #E5E5E5;
            text-align: center;
        }

        .product-card img {
            width: 100%;
            height: 150px;
            object-fit: contain;
            border-radius: 6px;
            margin-bottom: 8px;
        }

        .product-card h3 a {
            font-size: 14px;
            color: #1C2526;
            font-weight: 700;
            text-decoration: none;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            display: block;
        }

        .product-card h3 a:hover {
            color: #58CC02;
        }

        .product-card .price {
            font-size: 12px;
            color: #58CC02;
            font-weight: 700;
        }

        .product-card .discount {
            font-size: 10px;
            color: #FF4D4D;
        }

        .product-card .rating {
            font-size: 10px;
            color: #1C2526;
            margin-top: 5px;
        }

        .container.mt-5 {
            margin-bottom: 40px;
        }

        .card {
            border: 2px solid #E5E5E5;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        }

        .card h4 {
            font-size: 20px;
            color: #1C2526;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .col-md-8 {
            max-width: 700px;
        }

        .progress-bar {
            background-color: #58CC02;
        }

        .btn {
            background-color: #58CC02;
            color: #FFFFFF;
            border: none;
            border-radius: 20px;
            font-weight: 700;
            transition: background 0.3s;
        }

        .btn:hover {
            background-color: #4AB302;
        }

        .badge {
            background-color: #58CC02;
            color: #FFFFFF;
        }

        footer {
            background: #FFFFFF;
            padding: 20px;
            position: fixed;
            color: #1C2526;
            border-top: 1px solid #E5E5E5;
        }

        .footer-content {
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            gap: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .footer-section h4 {
            font-size: 18px;
            color: #1C2526;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .footer-section p {
            font-size: 14px;
        }

        .footer-section ul {
            list-style: none;
        }

        .footer-section ul li a {
            color: #1C2526;
            text-decoration: none;
            font-size: 14px;
        }

        .footer-section ul li a:hover {
            color: #58CC02;
        }

        .social-links a {
            color: #1C2526;
            margin: 0 10px;
            font-size: 18px;
            transition: color 0.3s;
        }

        .social-links a:hover {
            color: #58CC02;
        }

        .footer-bottom {
            text-align: center;
            margin-top: 20px;
            font-size: 12px;
        }

        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
        }

        .toast-success {
            background-color: #58CC02;
            color: #FFFFFF;
        }

        .toast-error {
            background-color: #FF4D4D;
            color: #FFFFFF;
        }

        @media (max-width: 768px) {
            .navbar {
                padding: 10px 15px;
                flex-wrap: wrap;
            }

            .nav-links {
                gap: 15px;
            }

            .nav-links li a {
                font-size: 16px;
            }

            .breadcrumbs {
                font-size: 12px;
                padding: 10px 15px;
            }

            .product-details-container {
                flex-direction: column;
                align-items: center;
            }

            .product-info {
                text-align: center;
            }

            .action-buttons {
                flex-direction: column;
                width: 100%;
            }

            .action-buttons button {
                width: 100%;
            }

            .products-grid {
                grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            }

            .product-card img {
                height: 120px;
            }

            .product-card h3 a {
                font-size: 12px;
            }

            .product-card .price {
                font-size: 10px;
            }

            .product-card .discount, .product-card .rating {
                font-size: 9px;
            }

            .col-md-8 {
                max-width: 100%;
            }

            .footer-content {
                flex-direction: column;
                align-items: center;
                text-align: center;
            }

            .footer-section {
                width: 100%;
                margin-bottom: 20px;
            }

            .footer-section h4 {
                font-size: 16px;
            }

            .footer-section p, .footer-section ul li a {
                font-size: 12px;
            }

            .social-links a {
                font-size: 16px;
            }
        }

        @media (min-width: 769px) and (max-width: 1024px) {
            .products-grid {
                grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
            }
        }
    </style>
</head>
<body>
    <div class="toast-container">
        <div class="toast" id="notificationToast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">Notification</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body"></div>
        </div>
    </div>

    <header>
        <nav class="navbar">
            <div class="logo">
                <h1><a href="/users/landing">Ocean Books</a></h1>
                <p class="tagline">Dive into a Sea of Stories</p>
            </div>
            
            <ul class="nav-links">
                <li><a href="/users/orders" class="active"><i class="fas fa-receipt"></i></a></li>
                <li><a href="/users/cart"><i class="fas fa-shopping-cart"></i><span class="count-badge" data-count="<%= cartCount || 0 %>"><%= cartCount || 0 %></span></a></li>
                <li><a href="/users/wishlist"><i class="fas fa-heart"></i> <span class="count-badge" data-count="<%= wishlistCount || 0 %>"><%= wishlistCount || 0 %></span></a></li>
                <li><a href="/users/profile"><i class="fas fa-user"></i></a></li>
                <% if (typeof user !== 'undefined' && user) { %>
                    <li><a href="/users/logout"><i class="fas fa-sign-out-alt"></i></a></li>
                <% } else { %>
                    <li><a href="/users/login"><i class="fas fa-sign-in-alt"></i></a></li>
                    <li><a href="/users/signup"><i class="fas fa-user-plus"></i></a></li>
                <% } %>
            </ul>

        </nav>
    </header>
    <main>
        <div class="breadcrumbs">
            <a href="/users/products">Shop ›</a>
            <a href="/users/products?category=<%= encodeURIComponent(product.category && product.category._id ? product.category._id : product.category) %>"><%= product.category && product.category.name ? product.category.name : categoryName || 'Category' %> ›</a>
            <span><%= product.name %></span>
        </div>

        <div class="product-details-container">
            <div class="product-images">
                <div class="main-image">
                    <img 
                        src="<%= product.images[0] || '/images/default.jpg' %>" 
                        alt="<%= product.name %>" 
                        id="mainImage" 
                        class="drift-trigger" 
                        data-zoom="<%= product.images[0] || '/images/default.jpg' %>"
                    >
                </div>
                <div class="thumbnail-gallery">
                    <% if (product.images && product.images.length > 0) { %>
                        <% product.images.slice(0, 3).forEach((img, index) => { %>
                            <div class="thumbnail">
                                <img src="<%= img %>" alt="Thumbnail <%= index + 1 %>" onclick="changeImage(this, '<%= img %>')" class="<%= index === 0 ? 'active' : '' %>">           
                            </div>
                        <% }); %>
                    <% } %>
                </div>
            </div>

            <div class="product-info">
                <div class="product-category"><%= product.category && product.category.name ? product.category.name : categoryName || 'Category' %></div>
                <h1 class="product-name"><%= product.name %></h1>
                <div class="product-rating">
                    <% if (product.ratings && product.reviews.length > 0) { %>
                        <% const avgRating = product.reviews.reduce((sum, r) => sum + r.rating, 0) / product.reviews.length; %>
                        <p><strong><%= avgRating.toFixed(1) %> ⭐</strong> (<%= product.reviews.length %> Reviews)</p>
                    <% } else { %>
                        <p><strong>0.0 ⭐</strong> (0 Reviews)</p>
                    <% } %>
                </div>
                <div class="product-description">
                    <h3>Description</h3>
                    <p><%= product.description || 'No description available.' %></p>
                </div>
                <div class="actual_price">
                    <span class="mrp">MRP:</span>
                    <span class="price">₹<%= product.price.toFixed(2) %></span>
                </div>
                <div class="product-price">
                    Price: ₹<%= (product.price * (1 - product.discount / 100)).toFixed(2) %>
                    <% if (product.discount > 0) { %>
                        <span class="discount">(<%= product.discount %>% off)</span>
                    <% } %>
                </div>
                <div class="quantity-selector">
                    <label for="quantity">Quantity:</label>
                    <button class="quantity-btn" onclick="updateQuantity(-1)">-</button>
                    <input type="text" class="quantity-input" id="quantity" value="1" readonly>
                    <button class="quantity-btn" onclick="updateQuantity(1)">+</button>
                    <span class="stock-status">
                        <% if (product.stock > 0) { %>
                            <span class="in-stock">In Stock</span>
                        <% } else { %>
                            <span class="out-of-stock">Out of Stock</span>
                        <% } %>
                    </span>
                </div>
                <div class="action-buttons">
                    <button id="add-to-cart" class="add-to-cart" data-product-id="<%= product._id %>" <%= product.stock === 0 ? 'disabled' : '' %>>Add to Cart</button>
                    <button id="add-to-wishlist" class="add-to-cart" data-product-id="<%= product._id %>">Wishlist</button>
                </div>
            </div>
        </div>

        <div class="container">
            <h1>Related Products</h1>
            <div class="products-grid">
                <% relatedProducts.forEach(related => { %>
                    <div class="product-card">
                        <img src="<%= related.images[0] || '/images/default.jpg' %>" alt="<%= related.name %>">
                        <h3><a href="/users/products/<%= related._id %>"><%= related.name %></a></h3>
                        <div class="price">₹<%= (related.price * (1 - related.discount / 100)).toFixed(2) %></div>
                        <% if (related.discount > 0) { %>
                            <div class="discount"><%= related.discount %>% off</div>
                        <% } %>
                        <div class="rating">
                            <% if (related.reviews && related.reviews.length > 0) { %>
                                <% const avgRating = related.reviews.reduce((sum, r) => sum + r.rating, 0) / related.reviews.length; %>
                                <%= avgRating.toFixed(1) %> ⭐
                            <% } else { %>
                                0.0 ⭐
                            <% } %>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>

        <div class="container mt-5">
            <h1>Review</h1>
            <div class="row">
                <div class="col-md-4">
                    <div class="card p-3">
                        <h4>Customer Reviews</h4>
                        <p><strong>Average Rating:</strong> <%= averageRating %> ⭐</p>
                        <p><strong>Total Reviews:</strong> <%= totalReviews %></p>
                        <div>
                            <% for (let i = 5; i >= 1; i--) { %>
                                <div class="d-flex align-items-center">
                                    <span><%= i %> ⭐</span>
                                    <div class="progress flex-grow-1 mx-2" style="height: 10px;">
                                        <% let percentage = (ratingCounts[i] / totalReviews) * 100 || 0; %>
                                        <div class="progress-bar" style="width: <%= percentage %>%;"></div>
                                    </div>
                                    <span>(<%= ratingCounts[i] || 0 %>)</span>
                                </div>
                            <% } %>
                        </div>
                        <button class="btn mt-3" id="openModalBtn">Add Review</button>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="card p-3">
                        <h4>All Reviews</h4>
                        <div id="reviewsContainer">
                            <% if (reviews.length === 0) { %>
                                <p>No reviews yet.</p>
                            <% } else { %>
                                <% reviews.forEach(review => { %>
                                    <div class="border p-2 my-2">
                                        <strong><%= review.user.name %></strong>
                                        <span class="badge"><%= review.rating %> ⭐</span>
                                        <p><%= review.comment %></p>
                                        <small class="text-muted"><%= new Date(review.createdAt).toLocaleDateString() %></small>
                                        <% if (user && review.user && user._id.toString() === review.user._id.toString()) { %>
                                            <button class="btn btn-sm btn-secondary" onclick="openEditModal('<%= review._id %>', '<%= review.rating %>', '<%= review.comment %>')">Edit</button>
                                        <% } %>
                                    </div>
                                <% }); %>
                            <% } %>
                        </div>
                        <div class="d-flex justify-content-center mt-3">
                            <button id="prevPage" class="btn me-2" disabled>Previous</button>
                            <span id="pageInfo">Page 1 of <%= totalPages %></span>
                            <button id="nextPage" class="btn ms-2">Next</button>
                        </div>
                        <input type="hidden" id="productId" value="<%= product._id %>">
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="reviewModal" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="reviewModalLabel">Add Review</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="reviewForm">
                            <div class="form-group">
                                <label for="rating">Rating:</label>
                                <select class="form-control" id="rating">
                                    <option value="5">5 ⭐</option>
                                    <option value="4">4 ⭐</option>
                                    <option value="3">3 ⭐</option>
                                    <option value="2">2 ⭐</option>
                                    <option value="1">1 ⭐</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="comment">Review:</label>
                                <textarea class="form-control" id="comment" rows="3" required></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Submit Review</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="editReviewModal" tabindex="-1" aria-labelledby="editReviewModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editReviewModalLabel">Edit Review</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editReviewForm">
                            <input type="hidden" id="editReviewId">
                            <div class="mb-3">
                                <label for="editRating" class="form-label">Rating:</label>
                                <input type="number" id="editRating" class="form-control" min="1" max="5" required>
                            </div>
                            <div class="mb-3">
                                <label for="editComment" class="form-label">Comment:</label>
                                <textarea id="editComment" class="form-control" required></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Update Review</button>
                            <button type="button" class="btn btn-secondary" onclick="closeEditModal()">Close</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <footer>
        <div class="footer-content">
            <div class="footer-section">
                <h4>Ocean Books</h4>
                <p>Explore a world of literature with us.</p>
                <div class="social-links">
                    <a href="#"><i class="fab fa-facebook-f"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                </div>
            </div>
            <div class="footer-section">
                <h4>Quick Links</h4>
                <ul>
                    <li><a href="/about">About Us</a></li>
                    <li><a href="/contact">Contact</a></li>
                    <li><a href="/terms">Terms & Conditions</a></li>
                    <li><a href="/privacy">Privacy Policy</a></li>
                </ul>
            </div>
        </div>
        <p class="footer-bottom">© 2025 Ocean Books. All rights reserved.</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/drift-zoom@1.5.0/dist/Drift.min.js"></script>
    <script>
        function showToast(message, type = 'success') {
            const toastEl = document.getElementById('notificationToast');
            const toastBody = toastEl.querySelector('.toast-body');
            toastEl.classList.remove('toast-success', 'toast-error');
            toastEl.classList.add(`toast-${type}`);
            toastBody.textContent = message;
            const toast = new bootstrap.Toast(toastEl, { autohide: true, delay: 3000 });
            toast.show();
        }

        function changeImage(element, src) {
            const mainImage = document.getElementById('mainImage');
            mainImage.src = src;
            mainImage.dataset.zoom = src;
            document.querySelectorAll('.thumbnail img').forEach(img => img.classList.remove('active'));
            element.classList.add('active');
            new Drift(mainImage, {
                paneContainer: document.body,
                inlinePane: 400,
                zoomFactor: 3,
                hoverDelay: 200
            });
        }

        function updateQuantity(change) {
            const input = document.getElementById('quantity');
            const max = parseInt('<%= product.stock %>') || 1;
            let value = parseInt(input.value) || 1;
            value = Math.max(1, Math.min(max, value + change));
            input.value = value;
            document.querySelectorAll('.quantity-btn')[0].disabled = value === 1;
            document.querySelectorAll('.quantity-btn')[1].disabled = value === max;
        }

        document.getElementById('add-to-cart').addEventListener('click', async () => {
            const productId = document.getElementById('add-to-cart').dataset.productId;
            const quantity = parseInt(document.getElementById('quantity').value);
            const response = await fetch(`/users/cart/add/${productId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ quantity }),
                credentials: 'include'
            });
            const data = await response.json();
            if (data.success) {
                showToast('Added to cart!');
            } else {
                showToast(data.message || 'Already in cart!', 'error');
            }
        });

        document.getElementById('add-to-wishlist').addEventListener('click', async () => {
            const productId = document.getElementById('add-to-wishlist').dataset.productId;
            const response = await fetch(`/users/wishlist/add/${productId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'include'
            });
            const data = await response.json();
            if (data.success) {
                const wishlistBadge = document.querySelector('.nav-links a[href="/users/wishlist"] .count-badge');
                let currentCount = parseInt(wishlistBadge.dataset.count) || 0;
                wishlistBadge.dataset.count = currentCount + 1;
                wishlistBadge.textContent = currentCount + 1;
                showToast('Added to wishlist!');
            } else {
                showToast(data.message || 'Already in wishlist!', 'error');
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
            new Drift(document.querySelector('.drift-trigger'), {
                paneContainer: document.body,
                inlinePane: 400,
                zoomFactor: 3,
                hoverDelay: 200
            });

            document.getElementById('openModalBtn').addEventListener('click', () => {
                new bootstrap.Modal(document.getElementById('reviewModal')).show();
            });

            updateQuantity(0);
        });

        const token = '<%= user ? user.token : "" %>';
        document.getElementById('reviewForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const rating = document.getElementById('rating').value;
            const comment = document.getElementById('comment').value;
            const response = await fetch(`/users/products/<%= product._id %>/review`, {
                method: 'POST',
                headers: { 
                    'Content-Type': 'application/json', 
                    'Authorization': `Bearer ${token}` 
                },
                body: JSON.stringify({ productId: '<%= product._id %>', rating, comment })
            });
            const data = await response.json();
            if (data.success) {
                showToast('Review added!');
                setTimeout(() => location.reload(), 1000);
            } else {
                showToast(data.message, 'error');
            }
        });

        function openEditModal(reviewId, rating, comment) {
            document.getElementById('editReviewId').value = reviewId;
            document.getElementById('editRating').value = rating;
            document.getElementById('editComment').value = comment;
            new bootstrap.Modal(document.getElementById('editReviewModal')).show();
        }

        function closeEditModal() {
            bootstrap.Modal.getInstance(document.getElementById('editReviewModal')).hide();
        }

        document.getElementById('editReviewForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const reviewId = document.getElementById('editReviewId').value;
            const rating = document.getElementById('editRating').value;
            const comment = document.getElementById('editComment').value;
            const response = await fetch(`/users/products/<%= product._id %>/review/edit`, {
                method: 'POST',
                headers: { 
                    'Content-Type': 'application/json', 
                    'Authorization': `Bearer ${token}` 
                },
                body: JSON.stringify({ reviewId, rating, comment })
            });
            const data = await response.json();
            if (data.success) {
                showToast('Review updated!');
                setTimeout(() => {
                    closeEditModal();
                    location.reload();
                }, 1000);
            } else {
                showToast(data.message, 'error');
            }
        });

        function loadReviews(page) {
            const productId = document.getElementById('productId').value;
            fetch(`/product-details?id=${productId}&page=${page}`, { headers: { 'X-Requested-With': 'XMLHttpRequest' } })
                .then(response => response.json())
                .then(data => {
                    if (data.reviews) {
                        updateReviewsUI(data.reviews, data.currentPage, data.totalPages);
                    }
                })
                .catch(error => console.error('Error fetching reviews:', error));
        }

        function updateReviewsUI(reviews, currentPage, totalPages) {
            const reviewsContainer = document.getElementById('reviewsContainer');
            reviewsContainer.innerHTML = '';
            if (reviews.length === 0) {
                reviewsContainer.innerHTML = '<p>No reviews yet.</p>';
            } else {
                reviews.forEach(review => {
                    const reviewElement = document.createElement('div');
                    reviewElement.className = 'border p-2 my-2';
                    reviewElement.innerHTML = `
                        <strong>${review.user.name}</strong>
                        <span class="badge">${review.rating} ⭐</span>
                        <p>${review.comment}</p>
                        <small class="text-muted">${new Date(review.createdAt).toLocaleDateString()}</small>
                        ${'<%= user && user._id %>' && review.user && '<%= user._id %>' === review.user._id ? 
                            `<button class="btn btn-sm btn-secondary" onclick="openEditModal('${review._id}', '${review.rating}', '${review.comment}')">Edit</button>` : ''}
                    `;
                    reviewsContainer.appendChild(reviewElement);
                });
            }
            document.getElementById('prevPage').disabled = currentPage === 1;
            document.getElementById('nextPage').disabled = currentPage === totalPages;
            document.getElementById('pageInfo').textContent = `Page ${currentPage} of ${totalPages}`;
        }
    </script>
</body>
</html>