<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ocean Books - Checkout</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Roboto', sans-serif; background: #F5F5F5; color: #1C2526; padding-top: 100px; }
        .navbar { background: #FFFFFF; padding: 15px 20px; display: flex; justify-content: space-between; align-items: center; position: fixed; top: 0; left: 0; width: 100%; z-index: 1000; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); }
        .logo h1 a { color: #58CC02; text-decoration: none; font-size: 28px; font-weight: 700; }
        .tagline { color: #1C2526; font-size: 14px; margin-top: 5px; }
        .nav-links { list-style: none; display: flex; gap: 20px; align-items: center; }
        .nav-links li a { color: #1C2526; text-decoration: none; font-size: 16px; font-weight: 700; }
        .nav-links li a:hover { color: #58CC02; }
        
        .breadcrumbs {
            padding: 20px 20px;
            font-size: 14px;
            color: #1C2526;
            background-color: #E5E5E5;
            display: flex;
            gap: 8px;
            align-items: center;
        }

        .breadcrumbs a {
            color: #58CC02;
            text-decoration: none;
            font-weight: 700;
        }

        .breadcrumbs a:hover {
            color: #4AB302;
        }

        .breadcrumbs span {
            color: #1C2526;
        }

        .breadcrumbs a::after {
            content: "â€º";
            margin: 0 8px;
            color: #A0A0A0;
            font-weight: bold;
        }

        .breadcrumbs span::after {
            content: "";
        }
        .container { max-width: 1200px; margin: 0 auto; padding: 20px; display: flex; gap: 20px; }
        .left-panel { flex: 2; }
        .right-panel { flex: 1; background: #FFFFFF; padding: 20px; border-radius: 12px; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05); position: sticky; top: 120px; height: fit-content; }
        .section { background: #FFFFFF; padding: 20px; margin-bottom: 20px; border-radius: 12px; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05); }
        .section h3 { font-size: 20px; color: #58CC02; margin-bottom: 15px; }
        .address-list { margin-top: 10px; }
        .address-item { padding: 15px; border: 2px solid #e0e0e0; border-radius: 8px; margin-bottom: 10px; display: flex; justify-content: space-between; align-items: center; transition: all 0.3s; }
        .address-item:hover, .address-item.selected { border-color: #58CC02; background: #F5F5F5; }
        .address-item input { margin-right: 10px; }
        .address-actions a { color: #58CC02; text-decoration: none; margin-left: 10px; }
        .address-actions a:hover { text-decoration: underline; }
        .cart-item { display: flex; gap: 15px; padding: 15px 0; border-bottom: 1px solid #e0e0e0; }
        .cart-item img { width: 80px; height: 100px; object-fit: cover; border-radius: 8px; }
        .cart-item-details h4 { font-size: 16px; margin-bottom: 5px; }
        .cart-item-details p { font-size: 14px; color: #1C2526; }
        .price-details { font-size: 14px; }
        .price-details p { margin: 10px 0; }
        .price-details .total { font-size: 18px; font-weight: 700; color: #58CC02; }
        .checkout-btn { width: 100%; padding: 12px; background: #58CC02; color: #FFFFFF; border: none; border-radius: 20px; font-size: 16px; font-weight: 700; cursor: pointer; transition: background 0.3s; }
        .checkout-btn:hover { background: #46a802; }
        .message { position: fixed; top: 20px; right: 20px; padding: 10px 20px; background: #58CC02; color: #FFFFFF; border-radius: 5px; display: none; }
        .modal { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.5); z-index: 1001; }
        .modal-content { background: #FFFFFF; padding: 20px; margin: 10% auto; width: 90%; max-width: 400px; border-radius: 12px; position: relative; }
        .modal-content button { margin: 5px; }
        .coupon-section { 
  display: flex; 
  gap: 10px; 
  margin-bottom: 20px; 
}
.coupon-section input { 
  padding: 10px; 
  border: 2px solid #58CC02; 
  border-radius: 8px; 
  width: 70%; 
  font-size: 14px; 
  background: #F5F5F5; 
  transition: all 0.3s; 
}
.coupon-section input:focus { 
  outline: none; 
  background: #FFFFFF; 
  border-color: #46a802; 
}
.coupon-section button { 
  padding: 10px 15px; 
  background: #58CC02; 
  color: #FFFFFF; 
  border: none; 
  border-radius: 20px; 
  cursor: pointer; 
  font-weight: 700; 
  width: 30%; 
}
.coupon-section button:hover { 
  background: #46a802; 
}
.coupon-modal { 
  display: none; 
  position: fixed; 
  top: 0; 
  left: 0; 
  width: 100%; 
  height: 100%; 
  background: rgba(0, 0, 0, 0.5); 
  z-index: 1001; 
}
.coupon-modal-content { 
  background: #FFFFFF; 
  padding: 20px; 
  margin: 10% auto; 
  width: 90%; 
  max-width: 500px; 
  border-radius: 12px; 
  max-height: 80vh; 
  overflow-y: auto; 
}
.coupon-modal-content h3 { 
  color: #58CC02; 
  margin-bottom: 15px; 
}
.coupon-option { 
  padding: 10px; 
  border: 2px dashed #58CC02; 
  border-radius: 8px; 
  margin-bottom: 10px; 
  cursor: pointer; 
  transition: all 0.3s; 
}
.coupon-option:hover { 
  background: #F5F5F5; 
  border-color: #46a802; 
}
.coupon-option p { 
  margin: 5px 0; 
}
.price-details .discount { 
  color: #58CC02; 
  font-weight: 700; 
}
        @media (max-width: 768px) {
  .container {
    flex-direction: column;
    padding: 10px;
  }
  .left-panel, .right-panel {
    width: 100%;
    margin-bottom: 20px;
  }
  .right-panel {
    position: static;
  }
  .cart-item {
    flex-direction: column;
    align-items: center;
    text-align: center;
  }
  .cart-item img {
    width: 60px;
    height: 80px;
  }
  .address-item {
    flex-direction: column;
    align-items: flex-start;
  }
  .address-actions {
    margin-top: 10px;
  }
}
    </style>
</head>
<body>
    <header>
        <nav class="navbar">
            <div class="logo">
                <h1><a href="/users/landing">Ocean Books</a></h1>
                <p class="tagline">Dive into a Sea of Stories</p>
            </div>
            <ul class="nav-links">
                <li><a href="/users/wishlist"><i class="fas fa-heart"></i> (<span class="wishlist-count"><%= wishlistCount || 0 %></span>)</a></li>
                <li><a href="/users/cart"><i class="fas fa-shopping-cart"></i> (<span class="cart-count"><%= cartCount || 0 %></span>)</a></li>
                <li><a href="/users/profile"><i class="fas fa-user"></i></a></li>
                <% if (typeof user !== 'undefined' && user) { %>
                    <li><a href="/users/logout"><i class="fas fa-sign-out-alt"></i></a></li>
                <% } %>
            </ul>
        </nav>
    </header>

    <div class="breadcrumbs">
                <a href="/users/home">Home</a> <a href="/users/cart">Cart</a>  Checkout
    </div>

    <div class="container">
        <div class="left-panel">
            <div class="section">
                <h3>Select Delivery Address</h3>
                <% if (addresses && addresses.length > 0) { %>
                  <div class="address-list">
                    <% let hasChecked = false; %>
                    <% addresses.forEach((address, index) => { %>
                      <label class="address-item <%= address.isDefault && !hasChecked ? 'selected' : '' %>">
                        <div>
                          <input type="radio" name="address" value="<%= address._id %>" <%= address.isDefault && !hasChecked ? 'checked' : '' %> onchange="document.querySelectorAll('.address-item').forEach(el => el.classList.remove('selected')); this.closest('.address-item').classList.add('selected');">
                          <span><%= address.name %>, <%= address.street %>, <%= address.city %>, <%= address.state %>, <%= address.postalCode %> <%= address.isDefault ? '(Default)' : '' %></span>
                        </div>
                        <div class="address-actions">
                          <a href="#" onclick="openEditModal('<%= address._id %>', '<%= address.name %>', '<%= address.street %>', '<%= address.city %>', '<%= address.state %>', '<%= address.postalCode %>', <%= address.isDefault ? 'true' : 'false' %>)">Edit</a>
                        </div>
                      </label>
                      <% if (address.isDefault && !hasChecked) hasChecked = true; %>
                    <% }); %>
                  </div>
                <% } else { %>
                  <p>No addresses found.</p>
                <% } %>
                <a href="#" style="color: #58CC02;" onclick="openAddModal()">+ Add New Address</a>
              </div>
              
              <!-- Add Address Modal -->
              <div id="addAddressModal" class="modal">
                <div class="modal-content">
                  <h3>Add New Address</h3>
                  <form id="addAddressForm" method="POST">
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label for="name">Name</label>
                      <input type="text" id="name" name="name" required style="width: 100%; padding: 10px; border: 1px solid #e0e0e0; border-radius: 8px;">
                    </div>
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label for="street">Address</label>
                      <input type="text" id="street" name="street" required style="width: 100%; padding: 10px; border: 1px solid #e0e0e0; border-radius: 8px;">
                    </div>
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label for="city">City</label>
                      <input type="text" id="city" name="city" required style="width: 100%; padding: 10px; border: 1px solid #e0e0e0; border-radius: 8px;">
                    </div>
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label for="state">State</label>
                      <input type="text" id="state" name="state" required style="width: 100%; padding: 10px; border: 1px solid #e0e0e0; border-radius: 8px;">
                    </div>
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label for="postalCode">Pincode</label>
                      <input type="text" id="postalCode" name="postalCode" required style="width: 100%; padding: 10px; border: 1px solid #e0e0e0; border-radius: 8px;">
                    </div>
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label><input type="checkbox" name="isDefault" value="true"> Set as Default</label>
                    </div>
                    <button type="submit" style="padding: 10px 20px; background: #58CC02; color: #FFFFFF; border: none; border-radius: 20px;">Save</button>
                    <button type="button" onclick="closeAddModal()" style="padding: 10px 20px; background: #FF4D4D; color: #FFFFFF; border: none; border-radius: 20px;">Cancel</button>
                  </form>
                </div>
              </div>
              
              <!-- Edit Address Modal -->
              <div id="editAddressModal" class="modal">
                <div class="modal-content">
                  <h3>Edit Address</h3>
                  <form id="editAddressForm" method="POST">
                    <input type="hidden" id="editAddressId" name="addressId">
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label for="editName">Name</label>
                      <input type="text" id="editName" name="name" required style="width: 100%; padding: 10px; border: 1px solid #e0e0e0; border-radius: 8px;">
                    </div>
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label for="editStreet">Street</label>
                      <input type="text" id="editStreet" name="street" required style="width: 100%; padding: 10px; border: 1px solid #e0e0e0; border-radius: 8px;">
                    </div>
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label for="editCity">City</label>
                      <input type="text" id="editCity" name="city" required style="width: 100%; padding: 10px; border: 1px solid #e0e0e0; border-radius: 8px;">
                    </div>
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label for="editState">State</label>
                      <input type="text" id="editState" name="state" required style="width: 100%; padding: 10px; border: 1px solid #e0e0e0; border-radius: 8px;">
                    </div>
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label for="editPostalCode">Postal Code</label>
                      <input type="text" id="editPostalCode" name="postalCode" required style="width: 100%; padding: 10px; border: 1px solid #e0e0e0; border-radius: 8px;">
                    </div>
                    <div class="form-group" style="margin-bottom: 15px;">
                      <label><input type="checkbox" id="editIsDefault" name="isDefault" value="true"> Set as Default</label>
                    </div>
                    <button type="submit" style="padding: 10px 20px; background: #58CC02; color: #FFFFFF; border: none; border-radius: 20px;">Save</button>
                    <button type="button" onclick="closeEditModal()" style="padding: 10px 20px; background: #FF4D4D; color: #FFFFFF; border: none; border-radius: 20px;">Cancel</button>
                  </form>
                </div>
              </div>
            <div class="section">
                <h3>Your Order</h3>
                <% if (cartItems && cartItems.length > 0) { %>
                  <% cartItems.forEach(item => { %>
                    <% const discountedPrice = item.productId.price * (1 - (item.productId.discount || 0) / 100); %>
                    <div class="cart-item">
                      <img src="<%= item.productId.images[0] || '/images/default.jpg' %>" alt="<%= item.productId.name %>">
                      <div class="cart-item-details">
                        <h4><%= item.productId.name %></h4>
                        <p>Quantity: <%= item.quantity %> | â‚¹<%= discountedPrice.toFixed(2) %> each</p>
                      </div>
                    </div>
                  <% }); %>
                <% } else if (directProduct) { %>
                  <div class="cart-item">
                    <img src="<%= directProduct.images[0] || '/images/default.jpg' %>" alt="<%= directProduct.name %>">
                    <div class="cart-item-details">
                      <h4><%= directProduct.name %></h4>
                      <p>Quantity: 1 | â‚¹<%= (directProduct.price * (1 - (directProduct.discount || 0) / 100)).toFixed(2) %></p>
                    </div>
                  </div>
                <% } else { %>
                  <p>No items in your order.</p>
                <% } %>
              </div>
        </div>
        <div class="right-panel">
          <div class="right-panel">
            <h3>Order Summary</h3>
            <div class="coupon-section">
              <input type="text" id="couponCode" placeholder="Enter coupon code" <% if (appliedCoupon && appliedCoupon.code) { %>value="<%= appliedCoupon.code %>" disabled<% } %>>
              <% if (appliedCoupon && appliedCoupon.code) { %>
                <button id="removeCouponBtn">Remove</button>
              <% } else { %>
                <button id="applyCouponBtn">Apply</button>
              <% } %>
            </div>
            <div class="price-details">
              <p>Subtotal (<%= cartCount %> items): â‚¹<%= subtotal %></p>
              <p>Taxes: â‚¹<%= taxes %></p>
              <p>Shipping: â‚¹<%= shipping %></p>
              <% if (appliedCoupon && appliedCoupon.code) { %>
                <p class="discount">Discount (<%= appliedCoupon.discount %>%): -â‚¹<%= (subtotal * appliedCoupon.discount / 100).toFixed(2) %></p>
              <% } %>
              <p class="total">Total: â‚¹<%= total %></p>
            </div>
            <button id="place-order-btn" class="checkout-btn">Place Order</button>
            <div id="couponModal" class="coupon-modal">
              <div class="coupon-modal-content">
                <h3>Available Coupons</h3>
                <div id="couponList"></div>
                <button onclick="closeCouponModal()" style="padding: 10px 20px; background: #FF4D4D; color: #FFFFFF; border: none; border-radius: 20px; margin-top: 10px;">Close</button>
              </div>
            </div>
          </div>
    </div>
    <div class="message" id="message"></div>

    <script>
     function showMessage(text, isError = false) {
    const msg = document.getElementById('message');
    msg.textContent = text;
    msg.style.background = isError ? '#FF4D4D' : '#58CC02';
    msg.style.display = 'block';
    setTimeout(() => msg.style.display = 'none', 3000);
  }

  document.getElementById('place-order-btn').addEventListener('click', async (e) => {
    e.preventDefault();
    const selectedAddress = document.querySelector('input[name="address"]:checked');
    if (!selectedAddress) return showMessage('Please select an address', true);
    const addressId = selectedAddress.value;

    try {
      const response = await fetch('/users/checkout/initiate-order', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include',
        body: JSON.stringify({ addressId })
      });
      const data = await response.json();
      if (data.success) {
        window.location.href = `/users/checkout/payment?orderId=${data.orderId}`;
      } else {
        showMessage(data.message || 'Failed to initiate order', true);
      }
    } catch (error) {
      console.error('Initiate Order Error:', error);
      showMessage('Error initiating order', true);
    }
  });

  function openAddModal() { document.getElementById('addAddressModal').style.display = 'block'; }
  function closeAddModal() { document.getElementById('addAddressModal').style.display = 'none'; }
  function openEditModal(addressId, name, street, city, state, postalCode, isDefault) {
    document.getElementById('editAddressId').value = addressId;
    document.getElementById('editName').value = name || '';
    document.getElementById('editStreet').value = street || '';
    document.getElementById('editCity').value = city || '';
    document.getElementById('editState').value = state || '';
    document.getElementById('editPostalCode').value = postalCode || '';
    document.getElementById('editIsDefault').checked = isDefault === 'true' || isDefault === true;
    document.getElementById('editAddressModal').style.display = 'block';
  }
  function closeEditModal() { document.getElementById('editAddressModal').style.display = 'none'; }

  document.getElementById('addAddressForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const form = e.target;
    const formData = {
      name: form.name.value,
      street: form.street.value,
      city: form.city.value,
      state: form.state.value,
      postalCode: form.postalCode.value,
      country: 'India',
      isDefault: form.isDefault.checked ? true : false
    };
    try {
      const response = await fetch('/users/checkout/add-address', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include',
        body: JSON.stringify(formData)
      });
      const data = await response.json();
      if (data.success) {
        closeAddModal();
        window.location.reload();
      } else {
        showMessage(data.message || 'Failed to add address', true);
      }
    } catch (error) {
      console.error('Add Address Error:', error);
      showMessage('Error adding address', true);
    }
  });

  document.getElementById('editAddressForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const form = e.target;
    const formData = {
      name: form.name.value,
      street: form.street.value,
      city: form.city.value,
      state: form.state.value,
      postalCode: form.postalCode.value,
      country: 'India',
      isDefault: form.isDefault.checked ? true : false
    };
    const addressId = document.getElementById('editAddressId').value;
    try {
      const response = await fetch(`/users/checkout/edit-address/${addressId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include',
        body: JSON.stringify(formData)
      });
      const data = await response.json();
      if (data.success) {
        closeEditModal();
        window.location.reload();
      } else {
        showMessage(data.message || 'Failed to edit address', true);
      }
    } catch (error) {
      console.error('Edit Address Error:', error);
      showMessage('Error editing address', true);
    }
  });

  async function fetchCoupons() {
    const response = await fetch('/users/coupons', {
      method: 'GET',
      headers: { 'Content-Type': 'application/json' },
      credentials: 'include'
    });
    const data = await response.text();
    const parser = new DOMParser();
    const doc = parser.parseFromString(data, 'text/html');
    return Array.from(doc.querySelectorAll('.coupon-card')).map(card => ({
      code: card.dataset.code,
      discount: card.dataset.discount,
      expiryDate: card.querySelector('p:nth-child(2)').textContent.replace('Expires: ', '')
    }));
  }

  function openCouponModal(coupons) {
    const modal = document.getElementById('couponModal');
    const couponList = document.getElementById('couponList');
    couponList.innerHTML = '';
    coupons.forEach(coupon => {
      const div = document.createElement('div');
      div.className = 'coupon-option';
      div.innerHTML = `
        <p><strong>${coupon.code}</strong> - ${coupon.discount}% off</p>
        <p>Expires: ${coupon.expiryDate}</p>
      `;
      div.onclick = () => applyCoupon(coupon.code);
      couponList.appendChild(div);
    });
    modal.style.display = 'block';
  }

  function closeCouponModal() {
    document.getElementById('couponModal').style.display = 'none';
  }

  document.getElementById('applyCouponBtn')?.addEventListener('click', async () => {
    const couponInput = document.getElementById('couponCode').value.trim();
    if (couponInput) {
      applyCoupon(couponInput);
    } else {
      const coupons = await fetchCoupons();
      if (coupons.length > 0) {
        openCouponModal(coupons);
      } else {
        showMessage('No coupons available', true);
      }
    }
  });

  async function applyCoupon(code) {
    console.log('Applying coupon:', code); // Debug log
    const response = await fetch('/users/coupons/apply', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      credentials: 'include',
      body: JSON.stringify({ code })
    });
    const data = await response.json();
    console.log('Response:', data); // Debug log
    if (data.success) {
      closeCouponModal();
      showMessage(`Coupon ${code} applied! Discount: ${data.discount}%`);
      updatePriceDetails(data.discount);
      location.reload(); // Reload to show Remove button
    } else {
      showMessage(data.message || 'Failed to apply coupon', true);
    }
  }

  document.getElementById('removeCouponBtn')?.addEventListener('click', async () => {
    const response = await fetch('/users/coupons/remove', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      credentials: 'include'
    });
    const data = await response.json();
    if (data.success) {
      showMessage('Coupon removed');
      updatePriceDetails(0);
      location.reload(); // Reload to show Apply button
    } else {
      showMessage(data.message, true);
    }
  });

  function updatePriceDetails(discount) {
    const subtotal = parseFloat('<%= subtotal %>');
    const taxes = parseFloat('<%= taxes %>');
    const shipping = parseFloat('<%= shipping %>');
    const discountAmount = discount ? (subtotal * discount / 100) : 0;
    const total = subtotal + taxes + shipping - discountAmount;

    const priceDetails = document.querySelector('.price-details');
    priceDetails.innerHTML = `
      <p>Subtotal (<%= cartCount %> items): â‚¹${subtotal.toFixed(2)}</p>
      <p>Taxes: â‚¹${taxes.toFixed(2)}</p>
      <p>Shipping: â‚¹${shipping.toFixed(2)}</p>
      ${discount ? `<p class="discount">Discount (${discount}%): -â‚¹${discountAmount.toFixed(2)}</p>` : ''}
      <p class="total">Total: â‚¹${total.toFixed(2)}</p>
    `;
  }

  // Initial price update if coupon is applied
  <% if (appliedCoupon && appliedCoupon.code) { %>
    updatePriceDetails(<%= appliedCoupon.discount %>);
  <% } %>
  </script>
</body>
</html>